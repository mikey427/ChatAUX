// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  name         String?
  spotifyData  SpotifyData?
  spotifyCache SpotifyCache?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model SpotifyData {
  id           Int      @id @default(autoincrement())
  spotifyId    String   @unique
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  username     String
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model SpotifyCache {
  id              Int      @id @default(autoincrement())
  userId          Int      @unique
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  likedTracks     Json?
  topTracks       Json?
  topArtists      Json?
  topGenres       Json?
  savedAlbums     Json?
  savedEpisodes   Json?
  followedArtists Json?
  userPlaylists   Json?
  recentlyPlayed  Json?
  lastSyncedAt    DateTime @updatedAt
  createdAt       DateTime @default(now())
}
